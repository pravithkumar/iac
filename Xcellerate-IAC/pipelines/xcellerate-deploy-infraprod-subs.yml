name: xcellerate-deploy-infraprod-subs-pipeline

trigger:
 - none

# pool:
#   vmImage: 'ubuntu-latest'

pool:
  name: "Vardo-Dev-IaC"

parameters:
- name: environment
  displayName: Environment
  type: string
  values:
  - prod
  - stage
  - prd

- name: regionname
  displayName: Region
  type: string
  values:
  - us

- name: location
  displayName: Location
  type: string
  values:
  - primary
  - dr

variables:
- group: xl-iac-stg-deploy

resources:
  repositories:
    - repository: Xcellerate-IAC
      type: git
      name: Fortrea-IaC/Xcellerate-IAC
      ref: refs/heads/Feature/pooja-IAC-code-initial

stages:
- template: templates/xcellerate-template-infraprod-subs.yml@Xcellerate-IAC
  parameters:
    ${{ if eq(parameters.location, 'default (both)') }}:
      environments:
      - ${{ parameters.environment }}-${{ parameters.regionname }}-primary
      - ${{ parameters.environment }}-${{ parameters.regionname }}-dr
    ${{ else}}:
      environments:
      - ${{ parameters.environment }}-${{ parameters.regionname }}-${{ parameters.location  }}
    SERVICE_CONNECTION_NAME: $(AZURE_SERVICE_CONNECTION_NAME)
    environment: ${{ parameters.environment  }}
    regionname: ${{ parameters.regionname }}
    location: ${{ parameters.location }}
    CLIENT_SECRET: $(ARM_CLIENT_SECRET)         
    TENANT_ID: $(ARM_TENANT_ID)    
    CLIENT_ID: $(ARM_CLIENT_ID)
# #  azureSubscription: 'My-Azure-Service-Connection'
#         storageAccountName: 'tfstateaccount'
#         resourceGroupName: 'tfstate-rg'
#         containerName: 'tfstate'
#         blobName: 'terraform.tfstate'
#         backupContainerName: 'tfstate-backups'
#         backupFilePrefix: 'tf-backup'
  
    