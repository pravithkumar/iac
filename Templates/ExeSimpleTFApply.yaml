parameters:
  - name: serviceConnection
    type: string
  - name: backendServiceConnection
    type: string

steps:

- download: current
  artifact: '$(Build.BuildId)-tfplan'

- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
  displayName: 'Use Terraform latest' 


- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
  displayName: 'terraform init'
  inputs:
    command: init
    workingDirectory: '$(workDir)'
    backendType: azurerm
    backendServiceArm: ${{ parameters.backendServiceConnection }}
    backendAzureRmResourceGroupName: $(RGName)
    backendAzureRmStorageAccountName: $(storageName)
    backendAzureRmContainerName: $(containerName)
    backendAzureRmKey: $(stateFileName)

- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
  displayName: 'terraform apply'
  inputs:
    command: apply
    workingDirectory: '$(workDir)'
    environmentServiceName: ${{ parameters.serviceConnection }}
    commandOptions: '$(Pipeline.Workspace)\$(Build.BuildId)-tfplan\plan.tfplan'
    backendType: azurerm
    backendServiceArm: ${{ parameters.backendServiceConnection }}
    backendAzureRmResourceGroupName: $(RGName)
    backendAzureRmStorageAccountName: $(storageName)
    backendAzureRmContainerName: $(containerName)
    backendAzureRmKey: $(stateFileName)