name: Deploy Terraform Infrastructure

on:
  workflow_dispatch:
    inputs:
      rootFolder:
        description: 'Path to Terraform root directory'
        required: true
        default: 'azurebatch/project'
      tfvars:
        description: 'Path to .tfvars file'
        required: true
        default: 'parameters/dev-terrafrom.tfvars'
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
          - validate
          - plan
          - apply
          - destroy

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURECRED }}

      - name: Set Terraform Azure Credentials
        run: |
          echo "ARM_CLIENT_ID=${{ fromJson(secrets.AZURECRED).clientId }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ fromJson(secrets.AZURECRED).clientSecret }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ fromJson(secrets.AZURECRED).subscriptionId }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ fromJson(secrets.AZURECRED).tenantId }}" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ inputs.rootFolder }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ inputs.rootFolder }}

      - name: Terraform Plan
        if: ${{ inputs.action == 'plan' || inputs.action == 'apply' || inputs.action == 'destroy' }}
        run: terraform plan -var-file=${{ inputs.tfvars }}
        working-directory: ${{ inputs.rootFolder }}

      - name: Terraform Apply
        if: ${{ inputs.action == 'apply' }}
        run: terraform apply -auto-approve -var-file=${{ inputs.tfvars }}
        working-directory: ${{ inputs.rootFolder }}

      - name: Terraform Destroy
        if: ${{ inputs.action == 'destroy' }}
        run: terraform destroy -auto-approve -var-file=${{ inputs.tfvars }}
        working-directory: ${{ inputs.rootFolder }}
